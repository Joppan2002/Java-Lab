import java.util.Scanner;

class Node {
int data;
Node prev;
Node next;

Node(int data) {
    this.data = data;
    prev = null;
    next = null;
}
}

public class DoublyLinkedList {
Node head;

public void insert(int data) {
    Node newNode = new Node(data);

    if(head == null) {
        head = newNode;
    } else {
        Node temp = head;
        while(temp.next != null) {
            temp = temp.next;
        }
        temp.next = newNode;
        newNode.prev = temp;
    }
}

public void delete(int data) {
    if(head == null) {
        System.out.println("List is empty");
    } else {
        Node temp = head;
        while(temp != null) {
            if(temp.data == data) {
                if(temp == head) {
                    head = temp.next;
                    head.prev = null;
                    break;
                } else {
                    temp.prev.next = temp.next;
                    temp.next.prev = temp.prev;
                    break;
                }
            }
            temp = temp.next;
        }
    }
}
public void display() {
    if(head == null) {
        System.out.println("List is empty");
    } else {
        Node temp = head;
        while(temp != null) {
            System.out.print(temp.data + " ");
            temp = temp.next;
        }
        System.out.println();
    }
}
public static void main(String[] args) {
    DoublyLinkedList list = new DoublyLinkedList();
    Scanner sc = new Scanner(System.in);

    System.out.println("Enter 1 to insert, 2 to delete, 3 to display, 0 to exit");
    int choice = sc.nextInt();

    while(choice != 0) {
        switch(choice) {
            case 1:
                System.out.println("Enter data to insert:");
                int data = sc.nextInt();
                list.insert(data);
                break;
            case 2:
                System.out.println("Enter data to delete:");
                data = sc.nextInt();
                list.delete(data);
                break;
            case 3:
                System.out.println("Doubly linked list:");
                list.display();
                break;
        }

        System.out.println("Enter 1 to insert, 2 to delete, 3 to display, 0 to exit");
        choice = sc.nextInt();
    }
}
}
